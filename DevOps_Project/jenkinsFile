pipeline {
    agent any
    stages {
       stage("Testing Maven") {
            steps {
                sh "mvn -version"
            }
        }
        stage("Testing JDK") {
            steps {
                sh "java -version"
            }
        }
        stage("Checkout Git") {
            steps {
                echo "" /* Pulling */
            }
        }
        stage('MVN COMPILE') {
            steps {
                dir('DevOps_Project') {
                    sh '' /* mvn compile */
                } 

            }
        }
    stage('Unit Tests / Mockito') {
        steps {
            dir('DevOps_Project') {
                sh '' /* mvn test */
            }
        }
    }
    stage('Nexus') {
            steps {
                  dir('DevOps_Project') {
                    sh 'mvn deploy'
                  }
                }
        }
  
    stage('Test, Jacoco Report & Static Analysis') {
                    steps {
                        dir('DevOps_Project') {
                        sh 'mvn test jacoco:report'
                        junit 'target/surefire-reports/**/*.xml'
                    }
}
        }
            

        stage('MVN SONARQUBE') {
            steps {
                dir('DevOps_Project'){
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=ellouminati20'
            }
}
        }

      /* stage('Deploy') {
            steps {
         dir('DevOps_Project') {
                sh 'mvn deploy -Dmaven.test.skip=true'
            }
        }
        } */

            stage('Docker Image'){
            steps{
                dir('DevOps_Project') {
                sh 'docker build -t abdellazizell/elloumidevops:1.0 .'
                }
            }
        }
        stage('Docker HUB  PUSH and Build') {
            steps {
                script {
                    def dockerUsername = 'abdellazizell'
                    def dockerPassword = 'Ellouminati20'
                    sh "docker login -u $dockerUsername -p $dockerPassword"
                    dir('DevOps_Project') {
                        sh 'docker tag devops_project abdellazizell/elloumidevops:1.0'
                        sh 'docker push abdellazizell/elloumidevops:1.0'
                    }
                }
            }
        }

        stage('Docker Compose') {
                    steps {
                         dir('DevOps_Project') {
                        sh 'docker compose up -d'
                          }
                    }
                } 

      /*   stage('PS') {
                    steps {
                        dir('DevOps_Project') {
                            sh 'docker compose ps'
                        }
                    }
                }
*/

        }

   post {
        always {
            script {
                def scannerHome = tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                withSonarQubeEnv('sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner \
                        -Dsonar.login=admin \
                        -Dsonar.password=ellouminati20 \
                        -Dsonar.jacoco.reportPaths=DevOps_Project/target/site/jacoco/jacoco.xml \
                        -Dsonar.projectKey=DevOps_Project \
                        -Dsonar.exclusions=vendor/**,resources/**,**/*.java \
                        -Dsonar.host.url=http://192.168.1.147:9000/"
                }
            }
        }
    }
  
}
